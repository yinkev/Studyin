
// Defines the core data structures for the Phase 1 MVP.

/**
 * The main structure for a lesson generated by the AI Tutor.
 */
export interface InteractiveLesson {
  id: string; // Unique identifier for the lesson
  sourceFile: string; // Path to the original source file
  tags: string[];
  content: Array<HeadingBlock | TextBlock | MultipleChoiceQuestionBlock>;
}

// --- Content Block Types --- //

export interface HeadingBlock {
  type: 'heading';
  level: 1 | 2 | 3;
  text: string;
}

export interface TextBlock {
  type: 'text_block';
  text: string;
}

export interface MultipleChoiceQuestionBlock {
  type: 'multiple_choice_question';
  id: string; // Unique identifier for the question
  learningObjective: string;
  stem: string;
  choices: Array<{ id: string; text: string; }>;
  correctChoice: string; // The 'id' of the correct choice
}

/**
 * Represents the user's knowledge and progress.
 * Stored locally in `data/state/local-user.json`.
 */
export interface LearnerState {
  userId: 'local-user';
  knowledgeState: Record<string, LearningObjectiveState>; // Keyed by learningObjective ID
}

export interface LearningObjectiveState {
  ability: number; // User's estimated knowledge level (e.g., 0.0 to 1.0)
  stability: number; // A measure of memory retention/forgetting
  lastAnsweredTimestamp: string; // ISO 8601 timestamp
  history: Array<AnswerRecord>;
}

export type Confidence = 'High' | 'Medium' | 'Low';

export interface AnswerRecord {
  questionId: string;
  isCorrect: boolean;
  confidence: Confidence;
  timestamp: string;
}
