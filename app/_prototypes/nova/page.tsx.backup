/**
 * NOVA - Brand New UI
 * Ocean Breeze Theme with HeroUI - Light & Fresh
 *
 * This is our visual reference - built as one page first
 * Components will be extracted AFTER we perfect the design
 */

'use client';

import { useState } from 'react';
import { Card, CardBody, CardHeader, Button, Chip, Progress, Avatar } from '@heroui/react';

export default function NovaPage() {
  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);
  const [confidence, setConfidence] = useState(0);
  const [submitted, setSubmitted] = useState(false);
  const [isCorrect, setIsCorrect] = useState<boolean | null>(null);

  const correctAnswer = 'B'; // The correct answer is B

  return (
    <div className="min-h-screen" style={{
      background: '#F5F5F5',
    }}>
      {/* Header */}
      <header className="border-b" style={{
        background: '#FFFFFF',
        borderColor: '#E5E7EB',
      }}>
        <div className="max-w-7xl mx-auto px-6 py-5 flex items-center justify-between">
          {/* Logo */}
          <div className="flex items-center gap-3">
            <div className="w-12 h-12 flex items-center justify-center relative overflow-hidden"
              style={{
                borderRadius: '16px',
                background: '#3B82F6',
                boxShadow: '0 4px 0 #2563EB',
              }}
            >
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" strokeWidth="2">
                <path d="M12 2L2 7l10 5 10-5-10-5z"/>
                <path d="M2 17l10 5 10-5"/>
                <path d="M2 12l10 5 10-5"/>
              </svg>
            </div>
            <h1 className="text-2xl font-bold tracking-tight" style={{
              color: '#111827',
              fontFamily: 'Space Grotesk, system-ui, sans-serif',
            }}>
              Studyin
            </h1>
          </div>

          {/* Nav */}
          <nav className="flex gap-2">
            {['Study', 'Upload', 'Analytics', 'Dashboard'].map((item) => (
              <Button
                key={item}
                variant={item === 'Study' ? 'flat' : 'light'}
                color={item === 'Study' ? 'primary' : 'default'}
                size="sm"
              >
                {item}
              </Button>
            ))}
          </nav>

          {/* User */}
          <div className="flex items-center gap-3">
            <div className="text-right">
              <div className="text-sm font-medium text-gray-900">Level 7</div>
              <div className="text-xs text-gray-600">2,450 XP</div>
            </div>
            <Avatar
              className="w-10 h-10"
              style={{
                background: '#3B82F6',
              }}
            />
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="max-w-5xl mx-auto px-6 py-12">
        {/* Study Card */}
        <Card className="mb-6 bg-white" style={{
          borderRadius: '40px',
          boxShadow: '0 4px 0 #D1D5DB, 0 12px 24px rgba(0, 0, 0, 0.08)',
          border: 'none',
        }}>

          <CardBody className="p-8">
            {/* Question */}
            <div className="mb-8">
              <Chip
                variant="flat"
                color="primary"
                className="mb-4"
                startContent={
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                    <circle cx="12" cy="12" r="10"/>
                    <path d="M12 16v-4"/>
                    <path d="M12 8h.01"/>
                  </svg>
                }
              >
                Question 3 of 10
              </Chip>

            <h2 className="text-3xl font-bold mb-2" style={{
              color: '#111827',
              fontFamily: 'Space Grotesk, system-ui, sans-serif',
              letterSpacing: '-0.02em',
            }}>
              What is the primary mechanism of action for ACE inhibitors?
            </h2>
            <p className="text-sm" style={{ color: '#6B7280' }}>
              Select the most accurate answer below
            </p>
          </div>

          {/* Answer Choices - Monochrome Pop */}
          <div className="space-y-3 mb-8">
            {[
              { id: 'A', text: 'Block aldosterone receptors in the kidney' },
              { id: 'B', text: 'Inhibit conversion of angiotensin I to angiotensin II' },
              { id: 'C', text: 'Directly vasodilate arterial smooth muscle' },
              { id: 'D', text: 'Block beta-1 receptors in the heart' },
            ].map((choice) => {
              const isSelected = selectedAnswer === choice.id;
              const isThisCorrect = choice.id === correctAnswer;
              const showFeedback = submitted;

              let backgroundColor = '#F9FAFB';
              let borderColor = '#E5E7EB';
              let textColor = '#374151';
              let shadowColor = 'none';

              if (showFeedback) {
                if (isThisCorrect) {
                  // Correct answer - green
                  backgroundColor = '#10B981';
                  borderColor = 'none';
                  textColor = '#FFFFFF';
                  shadowColor = '0 6px 0 #059669';
                } else if (isSelected) {
                  // Wrong answer that was selected - red
                  backgroundColor = '#EF4444';
                  borderColor = 'none';
                  textColor = '#FFFFFF';
                  shadowColor = '0 6px 0 #DC2626';
                }
              } else if (isSelected) {
                // Selected but not submitted - blue
                backgroundColor = '#3B82F6';
                borderColor = 'none';
                textColor = '#FFFFFF';
                shadowColor = '0 6px 0 #2563EB';
              }

              return (
                <button
                  key={choice.id}
                  onClick={() => !submitted && setSelectedAnswer(choice.id)}
                  disabled={submitted}
                  className="w-full text-left p-5 transition-all flex items-start gap-4"
                  style={{
                    borderRadius: '24px',
                    background: backgroundColor,
                    border: borderColor === 'none' ? 'none' : `2px solid ${borderColor}`,
                    color: textColor,
                    fontWeight: '600',
                    fontSize: '15px',
                    boxShadow: shadowColor,
                    cursor: submitted ? 'default' : 'pointer',
                  }}
                >
                  {choice.text}
                </button>
              );
            })}
          </div>

          {/* Confidence Rating */}
          {selectedAnswer && (
            <div className="border-t pt-6 mb-6" style={{ borderColor: '#BAE6FD' }}>
              <p className="text-sm text-center mb-4" style={{ color: '#0369A1' }}>
                How confident are you in this answer?
              </p>
              <div className="flex justify-center gap-2">
                {[1, 2, 3, 4, 5].map((star) => (
                  <button
                    key={star}
                    onClick={() => setConfidence(star)}
                    className="transition-all"
                  >
                    <svg
                      width="32"
                      height="32"
                      viewBox="0 0 24 24"
                      fill={star <= confidence ? '#FFD166' : 'none'}
                      stroke="#FFD166"
                      strokeWidth="2"
                    >
                      <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                    </svg>
                  </button>
                ))}
              </div>
              <p className="text-xs text-center mt-3" style={{ color: '#0369A1' }}>
                {confidence === 0 && 'Rate your confidence'}
                {confidence === 1 && 'Not confident'}
                {confidence === 2 && 'Slightly confident'}
                {confidence === 3 && 'Somewhat confident'}
                {confidence === 4 && 'Confident'}
                {confidence === 5 && 'Very confident'}
              </p>
            </div>
          )}

            {/* Submit Button */}
            <Button
              fullWidth
              size="lg"
              isDisabled={!selectedAnswer || confidence === 0 || submitted}
              onClick={() => {
                if (selectedAnswer && confidence > 0 && !submitted) {
                  setSubmitted(true);
                  setIsCorrect(selectedAnswer === correctAnswer);
                }
              }}
              className="font-bold text-base h-16"
              style={{
                borderRadius: '50px',
                background: selectedAnswer && confidence > 0 && !submitted ? '#111827' : '#E5E7EB',
                color: selectedAnswer && confidence > 0 && !submitted ? '#FFFFFF' : '#9CA3AF',
                boxShadow: selectedAnswer && confidence > 0 && !submitted ? '0 6px 0 #030712' : 'none',
                border: 'none',
              }}
            >
              {submitted ? (isCorrect ? '✓ Correct!' : '✗ Incorrect') : 'Submit Answer'}
            </Button>
          </CardBody>
        </Card>

        {/* Why This Next */}
        <Card className="bg-white" style={{
          borderRadius: '28px',
          boxShadow: '0 4px 0 #E5E7EB, 0 8px 16px rgba(0, 0, 0, 0.06)',
          border: 'none',
        }}>
          <CardBody className="p-6">
            <div className="flex items-center gap-3 mb-4">
              <div className="p-2 rounded-xl" style={{ background: '#F3F4F6' }}>
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#6B7280" strokeWidth="2.5">
                  <circle cx="12" cy="12" r="5"/>
                  <path d="M12 1v6m0 6v6M1 12h6m6 0h6"/>
                </svg>
              </div>
              <h3 className="font-bold text-base" style={{ color: '#111827' }}>Why This Question Next</h3>
            </div>
            <div className="flex flex-wrap gap-2">
              {[
                { label: 'θ̂', value: '0.67' },
                { label: 'SE', value: '0.12' },
                { label: 'Mastery', value: '0.82' },
                { label: 'Info', value: '1.45' },
                { label: 'Blueprint', value: '×1.2' },
              ].map((stat, i) => (
                <div
                  key={i}
                  className="px-3 py-2"
                  style={{
                    background: '#F3F4F6',
                    color: '#374151',
                    borderRadius: '12px',
                    border: '1px solid #E5E7EB',
                  }}
                >
                  <span className="font-mono font-semibold text-xs">{stat.label}={stat.value}</span>
                </div>
              ))}
            </div>
          </CardBody>
        </Card>
      </main>
    </div>
  );
}
