version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-studyin}
      POSTGRES_USER: ${DB_USER:-studyin_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-studyin_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  clamav:
    image: clamav/clamav:latest
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "clamdscan --version"]
      interval: 60s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ..
      dockerfile: Dockerfile
    env_file:
      - ../.env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      clamav:
        condition: service_started
    volumes:
      - ../:/app:ro
      - uploads:/app/uploads
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

volumes:
  postgres_data:
  redis_data:
  uploads:
